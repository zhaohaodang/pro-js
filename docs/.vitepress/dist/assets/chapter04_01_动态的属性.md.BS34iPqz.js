import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"动态的属性","description":"","frontmatter":{},"headers":[],"relativePath":"chapter04/01/动态的属性.md","filePath":"chapter04/01/动态的属性.md","lastUpdated":null}'),e={name:"chapter04/01/动态的属性.md"};function p(h,s,l,k,r,d){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="动态的属性" tabindex="-1">动态的属性 <a class="header-anchor" href="#动态的属性" aria-label="Permalink to &quot;动态的属性&quot;">​</a></h1><p>对于引用类型的值，我们可以为其添加属性和方法，也可以改变和删除其属性和方法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> person </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">person.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Nicholas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//&quot;Nicholas&quot;</span></span></code></pre></div><p>但是，我们不能给基本类型的值添加属性，尽管这样做不会导致任何错误：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Nicholas&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name.age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name.age); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//undefined</span></span></code></pre></div><p>这说明只能给引用类型值动态地添加属性，以便将来使用。</p>`,6)]))}const E=a(e,[["render",p]]);export{c as __pageData,E as default};
