import{_ as i,c as a,o as l,ag as t}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"模式的局限性","description":"","frontmatter":{},"headers":[],"relativePath":"chapter05/04/模式的局限性.md","filePath":"chapter05/04/模式的局限性.md","lastUpdated":null}'),r={name:"chapter05/04/模式的局限性.md"};function o(_,e,n,s,c,p){return l(),a("div",null,e[0]||(e[0]=[t('<h1 id="模式的局限性" tabindex="-1">模式的局限性 <a class="header-anchor" href="#模式的局限性" aria-label="Permalink to &quot;模式的局限性&quot;">​</a></h1><p>尽管ECMAScript 中的正则表达式功能还是比较完备的，但仍然缺少某些语言（特别是Perl）所支持的高级正则表达式特性：</p><ul><li>匹配字符串开始和结尾的\\A 和\\Z 锚</li><li>向后查找（lookbehind）</li><li>并集和交集类</li><li>原子组（atomic grouping）</li><li>Unicode 支持（单个字符除外，如\\uFFFF）</li><li>命名的捕获组</li><li>s（single，单行）和x（free-spacing，无间隔）匹配模式</li><li>条件匹配</li><li>正则表达式注释</li></ul>',3)]))}const h=i(r,[["render",o]]);export{u as __pageData,h as default};
