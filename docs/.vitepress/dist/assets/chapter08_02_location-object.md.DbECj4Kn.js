import{_ as o,c as d,o as a,ag as e}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"location 对象","description":"","frontmatter":{},"headers":[],"relativePath":"chapter08/02/location-object.md","filePath":"chapter08/02/location-object.md","lastUpdated":null}'),r={name:"chapter08/02/location-object.md"};function c(n,t,i,l,h,p){return a(),d("div",null,t[0]||(t[0]=[e('<h1 id="location-对象" tabindex="-1">location 对象 <a class="header-anchor" href="#location-对象" aria-label="Permalink to &quot;location 对象&quot;">​</a></h1><p>location 是最有用的 BOM对象之一，它提供了与当前窗口中加载的文档有关的信息，还提供了一些导航功能。</p><p>location 对象是很特别的一个对象，因为它既是 window 对象的属性，也是document 对象的属性；换句话说， window.location 和 document.location 引用的是同一个对象。</p><p>下表列出了 location 对象的所有属性（注：省略了每个属性前面的 location 前缀）。</p><table tabindex="0"><thead><tr><th>属 性 名</th><th>例 子</th><th>说 明</th></tr></thead><tbody><tr><td>hash</td><td>&quot;#contents&quot;</td><td>返回URL中的hash（#号后跟零或多个字符），如果URL中不包含散列，则返回空字符串</td></tr><tr><td>host</td><td>&quot;www.wrox.com:80&quot;</td><td>返回服务器名称和端口号（如果有）</td></tr><tr><td>hostname</td><td>&quot;www.wrox.com&quot;</td><td>返回不带端口号的服务器名称</td></tr><tr><td>href</td><td>&quot;http:/www.wrox.com&quot;</td><td>返回当前加载页面的完整URL。而location对象的toString()方法也返回这个值</td></tr><tr><td>pathname</td><td>&quot;/WileyCDA/&quot;</td><td>返回URL中的目录和（或）文件名</td></tr><tr><td>port</td><td>&quot;8080&quot;</td><td>返回URL中指定的端口号。如果URL中不包含端口号，则这个属性返回空字符串</td></tr><tr><td>protocol</td><td>&quot;http:&quot;</td><td>返回页面使用的协议。通常是http:或https:</td></tr><tr><td>search</td><td>&quot;?q=javascript&quot;</td><td>返回URL的查询字符串。这个字符串以问号开头</td></tr></tbody></table>',5)]))}const _=o(r,[["render",c]]);export{u as __pageData,_ as default};
