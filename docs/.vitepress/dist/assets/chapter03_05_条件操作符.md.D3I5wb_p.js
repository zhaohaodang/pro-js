import{_ as e,c as s,o as i,ag as t}from"./chunks/framework.DPDPlp3K.js";const d=JSON.parse('{"title":"条件操作符","description":"","frontmatter":{},"headers":[],"relativePath":"chapter03/05/条件操作符.md","filePath":"chapter03/05/条件操作符.md","lastUpdated":null}'),l={name:"chapter03/05/条件操作符.md"};function p(n,a,r,o,h,_){return i(),s("div",null,a[0]||(a[0]=[t('<h1 id="条件操作符" tabindex="-1">条件操作符 <a class="header-anchor" href="#条件操作符" aria-label="Permalink to &quot;条件操作符&quot;">​</a></h1><p>条件操作符应该算是ECMAScript 中最灵活的一种操作符了</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">variable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> boolean_expression </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> true_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> false_value;</span></span></code></pre></div><blockquote><p>如果boolean_expression结果为true，则给变量variable 赋true_value 值；如果boolean_expression结果为false，则给变量variable 赋false_value 值</p></blockquote><p>合理利用三元条件操作符，能极大简化代码</p>',5)]))}const k=e(l,[["render",p]]);export{d as __pageData,k as default};
