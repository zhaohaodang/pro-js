import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"for-in语句","description":"","frontmatter":{},"headers":[],"relativePath":"chapter03/06/for-in语句.md","filePath":"chapter03/06/for-in语句.md","lastUpdated":null}'),e={name:"chapter03/06/for-in语句.md"};function p(l,s,r,h,o,k){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="for-in语句" tabindex="-1">for-in语句 <a class="header-anchor" href="#for-in语句" aria-label="Permalink to &quot;for-in语句&quot;">​</a></h1><p>for-in 语句是一种精准的迭代语句，可以用来枚举<strong>对象的属性</strong></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (property </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expression) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  statement;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>示例</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> propName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(propName);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>使用for-in 循环来显示了BOM 中window 对象的所有属性。每次执行循环时，都会将window 对象中存在的一个属性名赋值给变量propName</p></blockquote><p>如果表示要迭代的对象的变量值为null 或undefined，for-in 语句会抛出错误</p><p>ECMAScript 5 更正了这一行为，对这种情况不再抛出错误，而只是不执行循环体</p><p>建议在使用for-in 循环之前，先检测确认该对象的值不是null 或undefined</p>`,9)]))}const E=i(e,[["render",p]]);export{c as __pageData,E as default};
