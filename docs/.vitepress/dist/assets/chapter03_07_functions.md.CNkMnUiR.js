import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"函数","description":"","frontmatter":{},"headers":[],"relativePath":"chapter03/07/functions.md","filePath":"chapter03/07/functions.md","lastUpdated":null}'),e={name:"chapter03/07/functions.md"};function l(p,s,h,r,k,c){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h1><p>函数的基本语法：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> functionName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arg1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,...,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">argN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	statements</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>推荐要么让函数始终都返回一个值，要么永远都不要返回值。否则，如果函数有时候返回值，有时候有不返回值，会给调试代码带来不便。</p><p>严格模式对函数有一些限制：</p><ul><li>不能把函数命名为eval 或arguments</li><li>不能把参数命名为eval 或arguments</li><li>不能出现两个命名参数同名的情况</li></ul>`,6)]))}const E=a(e,[["render",l]]);export{o as __pageData,E as default};
