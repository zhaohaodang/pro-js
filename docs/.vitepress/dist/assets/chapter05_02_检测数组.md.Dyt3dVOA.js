import{_ as s,c as i,o as t,ag as e}from"./chunks/framework.DPDPlp3K.js";const _=JSON.parse('{"title":"检测数组","description":"","frontmatter":{},"headers":[],"relativePath":"chapter05/02/检测数组.md","filePath":"chapter05/02/检测数组.md","lastUpdated":null}'),r={name:"chapter05/02/检测数组.md"};function n(p,a,l,h,c,o){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="检测数组" tabindex="-1">检测数组 <a class="header-anchor" href="#检测数组" aria-label="Permalink to &quot;检测数组&quot;">​</a></h1><p>前面讲到instanceof 操作符可以检测变量是否为Array引用类型。</p><p>instanceof 操作符的问题在于，它假定只有一个全局执行环境。如果网页中包含多个框架，那实际上就存在两个以上不同的全局执行环境，从而存在两个以上不同版本的Array 构造函数。</p><p>ECMAScript 5 新增了Array.isArray()方法。这个方法的目的是最终确定某个值到底是不是数组，而不管它是在哪个全局执行环境中创建的。这个方法的用法如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //对数组执行某些操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>支持Array.isArray()方法的浏览器有IE9+、Firefox 4+、Safari 5+、Opera 10.5+和Chrome。</p>`,6)]))}const k=s(r,[["render",n]]);export{_ as __pageData,k as default};
