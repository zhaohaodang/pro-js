import{_ as e,c as i,o as s,ag as a}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"10.1.3 Element类型","description":"","frontmatter":{},"headers":[],"relativePath":"chapter10/01/Element类型.md","filePath":"chapter10/01/Element类型.md","lastUpdated":null}'),l={name:"chapter10/01/Element类型.md"};function n(r,t,p,h,k,o){return s(),i("div",null,t[0]||(t[0]=[a(`<h1 id="_10-1-3-element类型" tabindex="-1">10.1.3 Element类型 <a class="header-anchor" href="#_10-1-3-element类型" aria-label="Permalink to &quot;10.1.3 Element类型&quot;">​</a></h1><ul><li>除了 Document 类型之外， Element 类型就要算是 Web 编程中最常用的类型了。</li><li>要访问元素的标签名，可以使用 nodeName 属性，也可以使用 tagName 属性。</li><li>操作特性的DOM 方法主要有三个，分别是 getAttribute()、 setAttribute()和 removeAttribute()。</li><li>有两类特殊的特性，它们虽然有对应的属性名，但属性的值与通过 getAttribute()返回的值并不相同。第一个是style，第二个是类似onclick这样的事件处理程序。</li><li>通过 setAttribute()方法可以设置自定义属性值，但是通过赋值的方式无法做到这一点。例如：</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div.mycolor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 无效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(div.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mycolor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//null（ IE 除外）</span></span></code></pre></div><ul><li>使用 document.createElement()方法可以创建新元素。这个方法只接受一个参数，即要创建元素的标签名。</li></ul>`,4)]))}const E=e(l,[["render",n]]);export{c as __pageData,E as default};
