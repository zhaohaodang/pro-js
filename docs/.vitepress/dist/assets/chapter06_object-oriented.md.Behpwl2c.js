import{_ as r,c as n,o,j as e,a as t}from"./chunks/framework.DPDPlp3K.js";const f=JSON.parse('{"title":"第6章 面向对象的程序设计","description":"","frontmatter":{},"headers":[],"relativePath":"chapter06/object-oriented.md","filePath":"chapter06/object-oriented.md","lastUpdated":null}'),l={name:"chapter06/object-oriented.md"};function c(s,a,d,i,p,u){return o(),n("div",null,a[0]||(a[0]=[e("h1",{id:"第6章-面向对象的程序设计",tabindex:"-1"},[t("第6章 面向对象的程序设计 "),e("a",{class:"header-anchor",href:"#第6章-面向对象的程序设计","aria-label":'Permalink to "第6章 面向对象的程序设计"'},"​")],-1),e("p",null,"面向对象的语言有一个标志，那就是它们都有类的概念，前面提到过，ECMAScript 中没有类的概念，因此它的对象也与基于类的语言中的对象有所不同。",-1),e("p",null,[t("ECMA-262 把对象定义为：“"),e("strong",null,"无序属性的集合"),t("，其属性可以包含基本值、对象或者函数。”严格来讲，这就相当于说对象是一组没有特定顺序的值。对象的每个属性或方法都有一个名字，而每个名字都映射到一个值。正因为这样（以及其他将要讨论的原因），我们可以把ECMAScript 的对象想象成"),e("strong",null,"散列表"),t("：无非就是一组名值对，其中值可以是数据或函数。")],-1),e("p",null,"每个对象都是基于一个引用类型创建的，这个引用类型可以是第5 章讨论的原生类型，也可以是开发人员定义的类型。",-1)]))}const h=r(l,[["render",c]]);export{f as __pageData,h as default};
