import{_ as t,c as l,o as a,j as e,a as o}from"./chunks/framework.DPDPlp3K.js";const q=JSON.parse('{"title":"11.1.1 querySelector()方法","description":"","frontmatter":{},"headers":[],"relativePath":"chapter11/01/querySelector.md","filePath":"chapter11/01/querySelector.md","lastUpdated":null}'),c={name:"chapter11/01/querySelector.md"};function n(u,r,s,d,i,p){return a(),l("div",null,r[0]||(r[0]=[e("h1",{id:"_11-1-1-queryselector-方法",tabindex:"-1"},[o("11.1.1 querySelector()方法 "),e("a",{class:"header-anchor",href:"#_11-1-1-queryselector-方法","aria-label":'Permalink to "11.1.1 querySelector()方法"'},"​")],-1),e("ul",null,[e("li",null,"querySelector()方法接收一个 CSS 选择符，返回与该模式匹配的第一个元素，如果没有找到匹配的元素，返回 null。如果传入了不被支持的选择符， querySelector()会抛出错误。"),e("li",null,"Document 类型调用 querySelector()方法时，会在文档元素的范围内查找匹配的元素。而通过 Element 类型调用 querySelector()方法时，只会在该元素后代元素的范围内查找匹配的元素。")],-1)]))}const y=t(c,[["render",n]]);export{q as __pageData,y as default};
